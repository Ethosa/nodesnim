CollisionShape2DType	nodesnim/nodes2d/collision_shape2d.html#CollisionShape2DType	collision_shape2d: CollisionShape2DType	
CollisionShape2DObj	nodesnim/nodes2d/collision_shape2d.html#CollisionShape2DObj	collision_shape2d: CollisionShape2DObj	
CollisionShape2DRef	nodesnim/nodes2d/collision_shape2d.html#CollisionShape2DRef	collision_shape2d: CollisionShape2DRef	
CollisionShape2D	nodesnim/nodes2d/collision_shape2d.html#CollisionShape2D,string	collision_shape2d: CollisionShape2D(name: string = &quot;CollisionShape2D&quot;): CollisionShape2DRef	
setShapeTypeRect	nodesnim/nodes2d/collision_shape2d.html#setShapeTypeRect.e,CollisionShape2DRef	collision_shape2d: setShapeTypeRect(self: CollisionShape2DRef)	
setShapeTypeCircle	nodesnim/nodes2d/collision_shape2d.html#setShapeTypeCircle.e,CollisionShape2DRef,float,float,float	collision_shape2d: setShapeTypeCircle(self: CollisionShape2DRef; cx, cy, radius: float)	
setShapeTypePolygon	nodesnim/nodes2d/collision_shape2d.html#setShapeTypePolygon.e,CollisionShape2DRef,varargs[Vector2Obj]	collision_shape2d: setShapeTypePolygon(self: CollisionShape2DRef; positions: varargs[Vector2Obj])	
duplicate	nodesnim/nodes2d/collision_shape2d.html#duplicate.e,CollisionShape2DRef	collision_shape2d: duplicate(self: CollisionShape2DRef): CollisionShape2DRef	
isCollide	nodesnim/nodes2d/collision_shape2d.html#isCollide.e,CollisionShape2DRef,float,float	collision_shape2d: isCollide(self: CollisionShape2DRef; x, y: float): bool	
isCollide	nodesnim/nodes2d/collision_shape2d.html#isCollide.e,CollisionShape2DRef,Vector2Obj	collision_shape2d: isCollide(self: CollisionShape2DRef; vec2: Vector2Obj): bool	
isCollide	nodesnim/nodes2d/collision_shape2d.html#isCollide.e,CollisionShape2DRef,CollisionShape2DRef	collision_shape2d: isCollide(self, other: CollisionShape2DRef): bool	
