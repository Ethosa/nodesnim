ColorCharRef	nodesnim/core/color_text.html#ColorCharRef	color_text: ColorCharRef	
ColorTextRef	nodesnim/core/color_text.html#ColorTextRef	color_text: ColorTextRef	
clrtext	nodesnim/core/color_text.html#clrtext,string,ColorRef,bool	color_text: clrtext(text: string; color: ColorRef = Color(1.0&apos;f32, 1.0&apos;f32, 1.0&apos;f32);\n        underline: bool = false): ColorTextRef	
clrchar	nodesnim/core/color_text.html#clrchar,char,ColorRef,bool	color_text: clrchar(c: char; color: ColorRef = Color(1.0&apos;f32, 1.0&apos;f32, 1.0&apos;f32);\n        underline: bool = false): ColorCharRef	
setColor	nodesnim/core/color_text.html#setColor,ColorTextRef,int,int,ColorRef	color_text: setColor(self: ColorTextRef; fromc, toc: int; value: ColorRef)	
setColor	nodesnim/core/color_text.html#setColor,ColorTextRef,ColorRef	color_text: setColor(self: ColorTextRef; value: ColorRef)	
setColor	nodesnim/core/color_text.html#setColor,ColorTextRef,int,ColorRef	color_text: setColor(self: ColorTextRef; index: int; value: ColorRef)	
setUnderline	nodesnim/core/color_text.html#setUnderline,ColorTextRef,int,int,bool	color_text: setUnderline(self: ColorTextRef; fromc, toc: int; value: bool)	
setUnderline	nodesnim/core/color_text.html#setUnderline,ColorTextRef,bool	color_text: setUnderline(self: ColorTextRef; value: bool)	
setUnderline	nodesnim/core/color_text.html#setUnderline,ColorTextRef,int,bool	color_text: setUnderline(self: ColorTextRef; index: int; value: bool)	
len	nodesnim/core/color_text.html#len,ColorTextRef	color_text: len(x: ColorTextRef): int	
splitLines	nodesnim/core/color_text.html#splitLines,ColorTextRef	color_text: splitLines(x: ColorTextRef): seq[ColorTextRef]	
`$`	nodesnim/core/color_text.html#$,ColorTextRef	color_text: `$`(text: ColorTextRef): string	
`$`	nodesnim/core/color_text.html#$,ColorCharRef	color_text: `$`(c: ColorCharRef): string	
`==`	nodesnim/core/color_text.html#==,ColorTextRef,ColorTextRef	color_text: `==`(x, y: ColorTextRef): bool	
`&amp;`	nodesnim/core/color_text.html#&,ColorCharRef,ColorCharRef	color_text: `&amp;`(x, y: ColorCharRef): ColorTextRef	
`&amp;`	nodesnim/core/color_text.html#&,ColorTextRef,ColorCharRef	color_text: `&amp;`(x: ColorTextRef; y: ColorCharRef): ColorTextRef	
`&amp;`	nodesnim/core/color_text.html#&,ColorCharRef,ColorTextRef	color_text: `&amp;`(x: ColorCharRef; y: ColorTextRef): ColorTextRef	
`&amp;`	nodesnim/core/color_text.html#&,ColorTextRef,ColorTextRef	color_text: `&amp;`(x, y: ColorTextRef): ColorTextRef	
contains	nodesnim/core/color_text.html#contains,ColorTextRef,ColorCharRef	color_text: contains(x: ColorTextRef; y: ColorCharRef): bool	
toChar	nodesnim/core/color_text.html#toChar.c,ColorCharRef	color_text: toChar(x: ColorCharRef): char	
`[]`	nodesnim/core/color_text.html#[],ColorTextRef,HSlice[U,V]	color_text: `[]`[U, V](self: ColorTextRef; i: HSlice[U, V]): ColorTextRef	
`[]`	nodesnim/core/color_text.html#[],ColorTextRef,BackwardsIndex	color_text: `[]`(self: ColorTextRef; i: BackwardsIndex): ColorCharRef	
`[]`	nodesnim/core/color_text.html#[],ColorTextRef,int	color_text: `[]`(self: ColorTextRef; i: int): ColorCharRef	
add	nodesnim/core/color_text.html#add,ColorTextRef,ColorTextRef	color_text: add(self: var ColorTextRef; other: ColorTextRef)	
add	nodesnim/core/color_text.html#add,ColorTextRef,ColorCharRef	color_text: add(self: var ColorTextRef; other: ColorCharRef)	
