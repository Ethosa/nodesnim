ColorObj	nodesnim/core/color.html#ColorObj	color: ColorObj	
ColorRef	nodesnim/core/color.html#ColorRef	color: ColorRef	
Color	nodesnim/core/color.html#Color,float,float,float,float	color: Color(r, g, b, a: float): ColorRef	
Color	nodesnim/core/color.html#Color,float,float,float	color: Color(r, g, b: float): ColorRef	
Color	nodesnim/core/color.html#Color,uint8,uint8,uint8,uint8	color: Color(r, g, b, a: uint8): ColorRef	
Color	nodesnim/core/color.html#Color,uint8,uint8,uint8	color: Color(r, g, b: uint8): ColorRef	
Color	nodesnim/core/color.html#Color,string	color: Color(src: string): ColorRef	
Color	nodesnim/core/color.html#Color,uint32	color: Color(src: uint32): ColorRef	
Color	nodesnim/core/color.html#Color	color: Color(): ColorRef	
normalize	nodesnim/core/color.html#normalize,float	color: normalize(n: float): uint32	
normalize	nodesnim/core/color.html#normalize,float,float,float	color: normalize(n, min, max: float): float	
normalizeColor	nodesnim/core/color.html#normalizeColor,float	color: normalizeColor(color: float): float	
toUint32BE	nodesnim/core/color.html#toUint32BE,ColorRef	color: toUint32BE(color: ColorRef): uint32	
toUint32LE	nodesnim/core/color.html#toUint32LE,ColorRef	color: toUint32LE(color: ColorRef): uint32	
toFloatTuple	nodesnim/core/color.html#toFloatTuple,ColorRef	color: toFloatTuple(color: ColorRef): tuple[r, g, b, a: float]	
toUint32Tuple	nodesnim/core/color.html#toUint32Tuple,ColorRef	color: toUint32Tuple(color: ColorRef): tuple[r, g, b, a: uint32]	
toUint32BEWithoutAlpha	nodesnim/core/color.html#toUint32BEWithoutAlpha,ColorRef	color: toUint32BEWithoutAlpha(color: ColorRef): uint32	
toUint32LEWithoutAlpha	nodesnim/core/color.html#toUint32LEWithoutAlpha,ColorRef	color: toUint32LEWithoutAlpha(color: ColorRef): uint32	
lerp	nodesnim/core/color.html#lerp,ColorRef,ColorRef,float	color: lerp(self, other: ColorRef; lerpv: float): uint32	
lerp	nodesnim/core/color.html#lerp,uint32,uint32,uint32,uint32,uint32,uint32,uint32,uint32,float	color: lerp(r1, g1, b1, a1, r2, g2, b2, a2: uint32; lerpv: float): uint32	
`$`	nodesnim/core/color.html#$,ColorRef	color: `$`(color: ColorRef): string	
`+`	nodesnim/core/color.html#+,ColorRef,ColorRef	color: `+`(x, y: ColorRef): ColorRef	
`-`	nodesnim/core/color.html#-,ColorRef,ColorRef	color: `-`(x, y: ColorRef): ColorRef	
`*`	nodesnim/core/color.html#*,ColorRef,ColorRef	color: `*`(x, y: ColorRef): ColorRef	
`/`	nodesnim/core/color.html#/,ColorRef,ColorRef	color: `/`(x, y: ColorRef): ColorRef	
`+=`	nodesnim/core/color.html#+=,ColorRef,ColorRef	color: `+=`(x: var ColorRef; y: ColorRef)	
`-=`	nodesnim/core/color.html#-=,ColorRef,ColorRef	color: `-=`(x: var ColorRef; y: ColorRef)	
`*=`	nodesnim/core/color.html#*=,ColorRef,ColorRef	color: `*=`(x: var ColorRef; y: ColorRef)	
`/=`	nodesnim/core/color.html#/=,ColorRef,ColorRef	color: `/=`(x: var ColorRef; y: ColorRef)	
`==`	nodesnim/core/color.html#==,ColorRef,ColorRef	color: `==`(x, y: ColorRef): bool	
